/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/models/stage/stage.glb 
*/

import * as THREE from "three";
import React, { useMemo } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { RigidBody } from "@react-three/rapier";

export default function Stage(props) {
  const { nodes, materials } = useGLTF("/models/stage/stage.glb");

  const rockNormalTexture = useTexture("/textures/rock-normal.jpg");
  const rockMaterial = useMemo(() => {
    return new THREE.MeshStandardMaterial({
      color: "#373C38",
      normalMap: rockNormalTexture,
      roughness: 0.8,
    });
  }, []);

  const woodNormalTexture = useTexture("/textures/wood-normal.jpg");
  const woodRoughnessTexture = useTexture("/textures/wood-roughness.jpg");
  const woodMaterial = useMemo(() => {
    return new THREE.MeshStandardMaterial({
      color: "#8E354A",
      normalMap: woodNormalTexture,
      roughnessMap: woodRoughnessTexture,
    });
  }, []);

  return (
    <group {...props} dispose={null}>
      <RigidBody
        type="fixed"
        colliders="trimesh"
        restitution={0.7}
        friction={0.25}
      >
        <mesh
          geometry={nodes["wood-spoon"].geometry}
          material={woodMaterial}
          position={[-0.435, 0.356, 2.207]}
          castShadow
          receiveShadow
        />
      </RigidBody>

      <mesh
        geometry={nodes["milk-pourer-v2"].geometry}
        material={materials["cream-mat"]}
        position={[-1.807, 2.642, 0]}
        castShadow
        receiveShadow
      />
      <mesh
        geometry={nodes["milk-liquid-fixed"].geometry}
        material={materials["milk-liquid"]}
        position={[-1.189, 3.059, 0]}
        castShadow
        receiveShadow
      />
      <mesh
        geometry={nodes["sakura-petals-on-floor"].geometry}
        material={materials.sakura}
        position={[-10.418, 0.318, 12.822]}
        castShadow
        receiveShadow
      />

      <RigidBody
        type="fixed"
        colliders="trimesh"
        restitution={0.7}
        friction={0.25}
      >
        <mesh
          geometry={nodes["zen-stone-ground"].geometry}
          castShadow
          receiveShadow
        >
          <meshStandardMaterial color="#91989F" />
        </mesh>
      </RigidBody>

      <RigidBody
        type="fixed"
        colliders="trimesh"
        restitution={0.7}
        friction={0.25}
      >
        <mesh
          geometry={nodes["rock-cereal-bowl"].geometry}
          material={rockMaterial}
          position={[0, -0.245, 0]}
          castShadow
          receiveShadow
        />
      </RigidBody>

      <RigidBody
        type="fixed"
        colliders="trimesh"
        restitution={0.7}
        friction={0.25}
      >
        <mesh
          geometry={nodes["rock-spoon-rest"].geometry}
          material={rockMaterial}
          position={[-0.727, 0, 2.124]}
          castShadow
          receiveShadow
        />
      </RigidBody>

      <RigidBody
        type="fixed"
        colliders="trimesh"
        restitution={0.7}
        friction={0.25}
      >
        <mesh
          geometry={nodes["rock-for-expression"].geometry}
          material={rockMaterial}
          position={[-1.558, 0, -6.578]}
          castShadow
          receiveShadow
        />
      </RigidBody>
    </group>
  );
}

useGLTF.preload("/models/stage/stage.glb");
